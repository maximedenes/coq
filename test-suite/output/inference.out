P = 
fun e : option L => match e with
                    | Some cl => Some cl
                    | None => None
                    end
     : option L -> option L
fun (m n p : nat) (H : S m <= S n + p) => le_S_n m (n + p) H
     : forall m n p : nat, S m <= S n + p -> m <= n + p
fun n : nat => let y : T n := A n in ?t ?x : T n
     : forall n : nat, T n
where
?t : [n : nat  y := A n : T n |- ?T -> T n] 
?x : [n : nat  y := A n : T n |- ?T] 
fun n : nat => ?t ?x : T n
     : forall n : nat, T n
where
?t : [n : nat |- ?T -> T n] 
?x : [n : nat |- ?T] 
